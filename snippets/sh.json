{
    "bash": {
        "prefix": "bash",
        "body": "${1|#!/bin/bash,#!/usr/bin/env bash|}\n",
        "description": "#!/bin/bash\n"
    },
    "echo": {
        "prefix": "echo",
        "body": "echo \"${0:message}\"",
        "description": "Echo a message."
    },
    "read": {
        "prefix": "read",
        "body": "read -r ${0:VAR}",
        "description": "Read input of ${VAR}."
    },
    "if": {
        "prefix": "if",
        "body": "if [[ ${0:condition} ]]; then\n\t${1}\nfi",
        "description": "An IF statement."
    },
    "elseif": {
        "prefix": "elseif",
        "body": "elif [[ ${0:condition} ]]; then\n\t${1}",
        "description": "Add an elseif to an if statement."
    },
    "else": {
        "prefix": "else",
        "body": "else\n\t${0:command}",
        "description": "else"
    },
    "for_in": {
        "prefix": "for_in",
        "body": "for ${0:VAR} in $${1:LIST}\ndo\n\techo \"$${0:VAR}\"\ndone\n",
        "description": "for loop in list"
    },
    "for_i": {
        "prefix": "for_i",
        "body": "for ((${0:i} = 0; ${0:i} < ${1:10}; ${0:i}++)); do\n\techo \"$${0:i}\"\ndone\n",
        "description": "An index-based iteration for loop."
    },
    "while": {
        "prefix": "while",
        "body": "while [[ ${1:condition} ]]; do\n\t${0}\ndone\n",
        "description": "A while loop by condition."
    },
    "until": {
        "prefix": "until",
        "body": "until [[ ${1:condition} ]]; do\n\t${0}\ndone\n",
        "description": "until loop by condition"
    },
    "function": {
        "prefix": "function",
        "body": "${1:name} ()\n{\n\t${0}\n}",
        "description": "C-like-way:\nfunction name [()] {}"
    },
    "case": {
        "prefix": "case",
        "body": "case \"$${0:VAR}\" in\n\t${1:1}) echo 1\n\t;;\n\t${2:2|3}) echo 2 or 3\n\t;;\n\t*) echo default\n\t;;\nesac\n",
        "description": "case word in [ [(] pattern [ | pattern ] ... ) list ;; ] ... esac\n"
    },
    "break": {
        "prefix": "break",
        "body": "break ${0}",
        "description": "Enter the break or break (n) where n=number of loops."
    },
    "expr": {
        "prefix": "expr",
        "body": "expr ${0:1 + 1}",
        "description": "Calculate numbers with Bash."
    },
    "file_read_by_line":{
        "prefix": "file_read_by_line",
        "body": "{\nwhile IFS= read -r \"lineNum\"\ndo\n\techo \"\\${lineNum}\"\ndone\n} < \"${0:FILE_NAME}\"",
        "description": "Read a text file line by line."
    },
    "file_batch_rename":{
        "prefix": "file_batch_rename",
        "body": "ls | xargs -i mv {} {}.${1:old}",
        "description": "Rename all files in a directory."
    },
    "awk_substr":{
        "prefix": "awk_substr",
        "body": "echo \"${1:VAR_OR_STRING}\" | awk '{print substr(\\$0,0,length(\\$0)-${2|AMOUNT_TO_CUT_BY,1,2,3|}'",
        "description": "A sub string with awk.  Change AMOUNT_TO_CUT_BY to a valid integer."
    },
    "awk_printf":{
        "prefix": "awk_printf",
        "body": "awk  -F ':'  '{printf(\"filename:%10s,linenumber:%s,columns:%s,linecontent:%s\\n\",FILENAME,NR,NF,\\$0)\\}' /etc/passwd",
        "description": "A printf example inside of awk."
    },
    "awk_for_loop":{
        "prefix": "awk_for_loop",
        "body": "awk -F ':' 'BEGIN {count=0;} {name[count] = \\$1;count++;\\}; END{for (i = 0; i < NR; i++) print i, name[i]\\}' /etc/passwd",
        "description": "A loop example in awk to show all users in /etc/passwd"
    }
}
